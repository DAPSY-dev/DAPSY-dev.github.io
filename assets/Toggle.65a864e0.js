import{e as i,c as l}from"./helpers.2a55dc19.js";class a{constructor(e,t={},s={}){this.element=e,this.options={escPress:!0,clickOutside:!0,...t},this.classNames={init:"is-init-toggle",toggle:"is-toggled",...s},this.targetElement=null,this.closeElements=null,this.toggle=this.toggle.bind(this),this.toggleOn=this.toggleOn.bind(this),this.toggleOff=this.toggleOff.bind(this),this.escPressCleanup=null,this.clickOutsideCleanup=null,this.init()}init(){if(this.element.classList.contains(this.classNames.init)){console.error(`Toggle is already initialized (id): ${this.element.dataset.id}`);return}this.targetElement=document.querySelector(`[data-toggle-box="${this.element.dataset.toggleTarget}"]`),this.closeElements=[...this.targetElement.querySelectorAll("[data-toggle-close]")],this.setup(),this.addEvents(),this.element.classList.add(this.classNames.init)}setup(){this.targetElement.hasAttribute("id")||(this.targetElement.id=this.element.dataset.id),this.element.setAttribute("aria-controls",this.targetElement.id),this.isToggled()?this.toggleOn(!0):this.toggleOff(!0)}isToggled(){return this.element.classList.contains(this.classNames.toggle)}toggle(){if(this.isToggled()){this.toggleOff();return}this.toggleOn()}toggleOn(e=!1){this.isToggled()&&!e||(this.element.classList.add(this.classNames.toggle),this.element.setAttribute("aria-expanded","true"),this.targetElement.classList.add(this.classNames.toggle))}toggleOff(e=!1){!this.isToggled()&&!e||(this.element.classList.remove(this.classNames.toggle),this.element.setAttribute("aria-expanded","false"),this.targetElement.classList.remove(this.classNames.toggle))}addEvents(){if(this.element.addEventListener("click",this.toggle),this.closeElements.length>0)for(const e of this.closeElements)e.addEventListener("click",this.toggleOff);this.options.escPress&&(this.escPressCleanup=i(this.toggleOff)),this.options.clickOutside&&(this.clickOutsideCleanup=l([this.element,this.targetElement],this.toggleOff))}removeEvents(){if(this.element.removeEventListener("click",this.toggle),this.closeElements.length>0)for(const e of this.closeElements)e.removeEventListener("click",this.toggleOff);this.options.escPress&&this.escPressCleanup(),this.options.clickOutside&&this.clickOutsideCleanup()}destroy(){if(!this.element.classList.contains(this.classNames.init)){console.error(`Toggle is not initialized (id): ${this.element.dataset.id}`);return}this.removeEvents(),this.targetElement=null,this.closeElements=null,this.element.classList.remove(this.classNames.init)}}export{a as default};
